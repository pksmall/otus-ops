dashboard: 'Crawler and UI'
priority: 1
panel_groups:
# NGINX Ingress metrics for post-0.16.0 versions
- group: Response metrics (NGINX Ingress)
  priority: 10
  panels:
  - title: "Throughput"
    type: "area-chart"
    y_label: "Requests / Sec"
    weight: 1
    metrics:
    - id: response_metrics_nginx_ingress_16_throughput_status_code
      query_range: 'sum(label_replace(rate(nginx_ingress_controller_requests{namespace="%{kube_namespace}",ingress=~".*%{ci_environment_slug}.*"}[2m]), "status_code", "${1}xx", "status", "(.)..")) by (status_code)'
      unit: req / sec
      label: Status Code
  - title: "Latency"
    type: "area-chart"
    y_label: "Latency (ms)"
    weight: 1
    metrics:
    - id: response_metrics_nginx_ingress_16_latency_pod_average
      query_range: 'sum(rate(nginx_ingress_controller_ingress_upstream_latency_seconds_sum{namespace="%{kube_namespace}",ingress=~".*%{ci_environment_slug}.*"}[2m])) / sum(rate(nginx_ingress_controller_ingress_upstream_latency_seconds_count{namespace="%{kube_namespace}",ingress=~".*%{ci_environment_slug}.*"}[2m])) * 1000'
      label: Pod average (ms)
      unit: ms
  - title: "HTTP Error Rate"
    type: "area-chart"
    y_label: "HTTP Errors (%)"
    weight: 1
    metrics:
    - id: response_metrics_nginx_ingress_16_http_error_rate
      query_range: 'sum(rate(nginx_ingress_controller_requests{status=~"5.*",namespace="%{kube_namespace}",ingress=~".*%{ci_environment_slug}.*"}[2m])) / sum(rate(nginx_ingress_controller_requests{namespace="%{kube_namespace}",ingress=~".*%{ci_environment_slug}.*"}[2m])) * 100'
      label: 5xx Errors (%)
      unit: "%"
# UI
- group: Response metrics (UI)
  priority: 10
  panels:
  - title: "Throughput"
    type: "area-chart"
    y_label: "Total Requests"
    weight: 1
    metrics:
    - id: web_pages_served
      query_range: 'web_pages_served{kubernetes_namespace=~"%{kube_namespace}"}'
      unit: reqs
      label: Total Request
  - title: "Avg Request Time"
    type: "area-chart"
    y_label: "Avg req time (ms)"
    weight: 1
    metrics:
    - id: web_page_gen_time_bucket
      query_range: 'avg(rate(web_page_gen_time_bucket{kubernetes_namespace=~"%{kube_namespace}"}[2m]))'
      label: Pod average (ms)
      unit: ms
# Crawler
- group: Crawler Stats
  priority: 10
  panels:
  - title: "Throughput"
    type: "area-chart"
    y_label: "Total web page processed"
    weight: 1
    metrics:
    - id: crawler_pages_parsed
      query_range: 'crawler_pages_parsed{kubernetes_namespace=~"%{kube_namespace}"}'
      label: Total request
      unit: req
  - title: "Connection Latency"
    type: "area-chart"
    y_label: "Latency (ms)"
    weight: 1
    metrics:
    - id: crawler_site_connection_time
      query_range: 'sum(rate(crawler_site_connection_time_bucket{kubernetes_namespace=~"%{kube_namespace}"}[2m]))'
      label: Time (ms)
      unit: ms
  - title: "Page Parser Latency"
    type: "area-chart"
    y_label: "Latency (ms)"
    weight: 1
    metrics:
    - id: crawler_page_parse_time_bucket
      query_range: 'sum(rate(crawler_page_parse_time_bucket{kubernetes_namespace=~"%{kube_namespace}"}[2m]))'
      label: Latency (ms)
      unit: ms
- group: System metrics (Kubernetes)
  priority: 5
  panels:
  - title: "Memory Usage (Total)"
    type: "area-chart"
    y_label: "Total Memory Used (GB)"
    weight: 4
    metrics:
    - id: system_metrics_kubernetes_container_memory_total
      query_range: 'avg(sum(container_memory_usage_bytes{container_name!="POD",pod_name=~"^%{ci_environment_slug}-(.*)",namespace="%{kube_namespace}"}) by (job)) without (job)  /1024/1024/1024'
      label: Total (GB)
      unit: GB
  - title: "Core Usage (Total)"
    type: "area-chart"
    y_label: "Total Cores"
    weight: 3
    metrics:
    - id: system_metrics_kubernetes_container_cores_total
      query_range: 'avg(sum(rate(container_cpu_usage_seconds_total{container_name!="POD",pod_name=~"^%{ci_environment_slug}-(.*)",namespace="%{kube_namespace}"}[15m])) by (job)) without (job)'
      label: Total (cores)
      unit: "cores"
  - title: "Memory Usage (Pod average)"
    type: "line-chart"
    y_label: "Memory Used per Pod (MB)"
    weight: 2
    metrics:
    - id: system_metrics_kubernetes_container_memory_average
      query_range: 'avg(sum(container_memory_usage_bytes{container_name!="POD",pod_name=~"^%{ci_environment_slug}-([^c].*|c([^a]|a([^n]|n([^a]|a([^r]|r[^y])))).*|)-(.*)",namespace="%{kube_namespace}"}) by (job)) without (job) / count(avg(container_memory_usage_bytes{container_name!="POD",pod_name=~"^%{ci_environment_slug}-([^c].*|c([^a]|a([^n]|n([^a]|a([^r]|r[^y])))).*|)-(.*)",namespace="%{kube_namespace}"}) without (job)) /1024/1024'
      label: Pod average (MB)
      unit: MB
  - title: "Core Usage (Pod Average)"
    type: "line-chart"
    y_label: "Cores per Pod"
    weight: 1
    metrics:
    - id: system_metrics_kubernetes_container_core_usage
      query_range: 'avg(sum(rate(container_cpu_usage_seconds_total{container_name!="POD",pod_name=~"^%{ci_environment_slug}-([^c].*|c([^a]|a([^n]|n([^a]|a([^r]|r[^y])))).*|)-(.*)",namespace="%{kube_namespace}"}[15m])) by (job)) without (job) / count(sum(rate(container_cpu_usage_seconds_total{container_name!="POD",pod_name=~"^%{ci_environment_slug}-([^c].*|c([^a]|a([^n]|n([^a]|a([^r]|r[^y])))).*|)-(.*)",namespace="%{kube_namespace}"}[15m])) by (pod_name))'
      label: Pod average (cores)
      unit: "cores"
